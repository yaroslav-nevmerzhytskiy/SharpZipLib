#!/bin/bash

BRANCH=`git rev-parse --abbrev-ref HEAD`
CORE_TECH_TEAM=('karl.harmer@productmadness.com'
	'hoang.bui@productmadness.com' 
	'emily.kwong@productmadness.com' 
	'zafer.sevik@productmadness.com'
	'per.nielsen@productmadness.com'
	'stephen.conner@productmadness.com'
	'tiago.carvalheiro@productmadness.com'
	'yaroslav.nevmerzhytskiy@productmadness.com'
	'arslan.qureshi@productmadness.com'
	'dmitry.petrichenko@productmadness.com'
	'valentin.solovev@productmadness.com'
	'mary.uraeva@productmadness.com'
	'anna.lizunova@productmadness.com'
	'boris.kashinsky@productmadness.com'
	'pruthvi.minchinadka@productmadness.com'
	'yulianna.kalinich@productmadness.com'
	'dzmitry.khileuski@productmadness.com'
	'anton.kornienko@productmadness.com'
	'vladyslav.artamonov@productmadness.com'
	'yuri.pustovoy@productmadness.com'
	'albert.ventura@productmadness.com'
	'guillermo.zafra@productmadness.com'
	'jesus.garcia@productmadness.com'
	'devbox@Devbox-3.local')
JIRA_PROJECTS=('COR' 'HU' 'LL' 'FFF' 'CC' 'TNT' 'CD' 'RD' 'MAD' 'FST' 'CA' 'PLAYADS')
PROTECTED_BRANCHES=('develop' 'master' 'hotfix' 'release')
CORE_TECH_JIRAS=('MAD' 'FST' 'PLAYADS')
CHANGELOG_COMMIT_TYPE='chore'
CHANGELOG_COMMIT_SCOPE='release'
USER=`git config --get user.email`
GIT_DIR=`git rev-parse --git-dir`

IS_CORE_TECH_USER=false
for i in ${CORE_TECH_TEAM[@]}; do
    if [[ $i == $USER ]]; then
    	IS_CORE_TECH_USER=true
    	break
	fi
done

IS_PROTECTED_BRANCH=false
for i in ${PROTECTED_BRANCHES[@]}; do
	if [[ $BRANCH =~ ^$i ]]; then
		IS_PROTECTED_BRANCH=true
		break
	fi
done

IS_JIRA_PROJECT_BRANCH=false
for i in ${JIRA_PROJECTS[@]}; do
	if [[ $BRANCH =~ ^feature\/$i-[0-9]+[-_] ]]; then
		IS_JIRA_PROJECT_BRANCH=true
		break
	fi
done

IS_CORE_TECH_SCOPE=false
COMMIT=$(<$GIT_DIR/COMMIT_EDITMSG)

for i in ${CORE_TECH_JIRAS[@]}; do
	if [[ $COMMIT =~ \($i-[0-9]+\): ]]; then
		IS_CORE_TECH_SCOPE=true
		break
	fi
done

# autogenerated changelog commit message has <type>(<scope>) as 'chore(release)', we use upper-case scope
# white list the 'chore(release)' commit message
if [[ $COMMIT =~ ${CHANGELOG_COMMIT_TYPE}\(${CHANGELOG_COMMIT_SCOPE}\): ]]; then
	IS_CORE_TECH_SCOPE=true
fi

echo "Is protected branch: $IS_PROTECTED_BRANCH. Is core-tech member: $IS_CORE_TECH_USER"

if ! $IS_CORE_TECH_USER; then
	if $IS_PROTECTED_BRANCH; then
		echo "You do not have permission to commit to $BRANCH. Please contact a core-tech developer"
		exit 1
	elif ! $IS_JIRA_PROJECT_BRANCH; then
		echo "Please ensure that branch ($BRANCH) contains jira project ticket number. Rename to 'feature/<jira-ticket>_<description>"
		exit 1
	fi
elif ! $IS_JIRA_PROJECT_BRANCH && ! $IS_PROTECTED_BRANCH; then
	echo "Feature branch $BRANCH is non-standard. Rename to 'feature/<jira-ticket>_<description>'. For example; feature/COR-2535_my_description"
	if ! $IS_CORE_TECH_SCOPE; then
		echo "Please ensure that branch contains core-tech jira project ticket number"
	fi
	exit 1
fi

if ! $IS_CORE_TECH_SCOPE; then
	echo "Commit must contain ${CORE_TECH_JIRAS[@]} project scope. For example; feat($CORE_TECH_JIRAS-123): description"
	exit 1
fi
